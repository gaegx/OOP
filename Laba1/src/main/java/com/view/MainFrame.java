package main.java.com.view;

import main.java.com.model.CryptoAsset;
import main.java.com.model.User;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.List;

public class MainFrame extends JFrame {
    private User user;
    private JLabel balanceLabel;
    private DefaultListModel<String> assetsModel;
    private JList<String> assetsList;

    public MainFrame(User user) {
        this.user = user;
        setTitle("–ö—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫");
        setSize(600, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridBagLayout());

        JLabel welcomeLabel = new JLabel("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, " + user.getUsername() + "!");
        welcomeLabel.setFont(new Font("Arial", Font.BOLD, 18));

        // –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        balanceLabel = new JLabel();
        balanceLabel.setFont(new Font("Arial", Font.BOLD, 16));

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è assetsModel –ø–µ—Ä–µ–¥ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
        assetsModel = new DefaultListModel<>();
        assetsList = new JList<>(assetsModel);
        assetsList.setFont(new Font("Arial", Font.PLAIN, 14));
        assetsList.setVisibleRowCount(5);
        assetsList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        JScrollPane scrollPane = new JScrollPane(assetsList);
        scrollPane.setPreferredSize(new Dimension(250, 100));

        updateBalance(); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–æ–≤

        JButton depositButton = createStyledButton("‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å", e -> openFrame(new AddassetFrame()));
        JButton transferButton = createStyledButton("üì§ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏", e -> openFrame(new ReplenishFrame()));
        JButton historyButton = createStyledButton("üìú –ò—Å—Ç–æ—Ä–∏—è", e -> openFrame(new HistoryFrame()));
        JButton settingsButton = createStyledButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", e -> openFrame(new SettingFrame()));
        JButton logoutButton = createStyledButton("–í—ã–π—Ç–∏", e -> System.exit(0));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        add(welcomeLabel, gbc);

        gbc.gridy = 1;
        add(balanceLabel, gbc); // –ë–∞–ª–∞–Ω—Å

        gbc.gridy = 2;
        gbc.gridwidth = 2;
        add(scrollPane, gbc); // –ê–∫—Ç–∏–≤—ã

        gbc.gridy = 3;
        gbc.gridwidth = 1;
        add(depositButton, gbc);

        gbc.gridx = 1;
        add(transferButton, gbc);

        gbc.gridx = 0;
        gbc.gridy = 4;
        add(historyButton, gbc);

        gbc.gridx = 1;
        add(settingsButton, gbc);

        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.CENTER;
        add(logoutButton, gbc);

        setVisible(true);
    }


    private JButton createStyledButton(String text, java.awt.event.ActionListener action) {
        JButton button = new JButton(text);
        button.setFont(new Font("Arial", Font.BOLD, 16));
        button.setPreferredSize(new Dimension(200, 40));
        button.setBackground(new Color(126, 153, 119));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        button.addActionListener(action);
        return button;
    }

    private void openFrame(JFrame frame) {
        frame.setVisible(true);
        dispose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å –ø–∞–º—è—Ç—å
    }

    public void updateBalance() {
        balanceLabel.setText("–ë–∞–ª–∞–Ω—Å: $" + user.getBalance());
        updateAssetsList(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–æ–≤
    }

    private void updateAssetsList() {
        assetsModel.clear();
        List<CryptoAsset> assets = user.getCryptoList().getAllAssets(); // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–æ–≤
        for (CryptoAsset asset : assets) {
            assetsModel.addElement(asset.getAssetName() + " (" + asset.getsymbol() + "): $" + asset.getPrice());
        }
    }
}
